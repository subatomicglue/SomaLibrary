{
  "name": "soma-serv",
  "version": "1.0.0",
  "description": "",
  "main": "soma-serv.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start-certbot-dev": "ACME_STAGING=true pm2 start soma-certbot.js --name soma-certbot-staging --watch --ignore-watch 'build public logs build_static.js build/ node_modules wiki certs app.js build_static.js router-auth.js router-fileserv.js router-wiki.js sanitizer.js settings.js template.js markdown.js  router-browser.js router-rss-torrent.js soma-serv.js' ",
    "start-certbot": "ACME_STAGING=false pm2 start soma-certbot.js --name soma-certbot --watch --ignore-watch 'build public logs build_static.js build/ node_modules wiki certs app.js build_static.js router-auth.js router-fileserv.js router-wiki.js sanitizer.js settings.js template.js markdown.js  router-browser.js router-rss-torrent.js soma-serv.js' ",
    "start": "NODE_HTTPS_PORT=443 NODE_HTTP_PORT=80 pm2 start soma-serv.js --log-date-format 'YYYY.MM.DD | HH:mm:ss' --watch --ignore-watch 'public logs node_modules wiki certs soma-certbot.js'  --name soma-serv",
    "logs": "pm2 logs",
    "setup": "pm2 save; pm2 startup",
    "restart": "NODE_HTTPS_PORT=443 NODE_HTTP_PORT=80 pm2 restart soma-serv",
    "stop": "pm2 stop soma-serv",
    "reset": "pm2 stop soma-serv; rm -r ~/.pm2",
    "delete": "pm2 delete soma-serv",
    "systemd-install": "sudo systemctl enable soma-serv; sudo systemctl start soma-serv; sudo systemctl daemon-reload; ",
    "systemd-remove": "sudo systemctl stop soma-serv; sudo systemctl disable soma-serv; sudo systemctl daemon-reload; ",
    "systemd-reinstall": "npm run systemd-remove; npm run systemd-install",
    "systemd-status": "sudo systemctl status soma-serv",
    "systemd-restart": "sudo systemctl restart soma-serv",
    "systemd-start": "sudo systemctl start soma-serv",
    "systemd-stop": "sudo systemctl stop soma-serv",
    "systemd-logs": "journalctl -u soma-serv",
    "expose-wifi": "echo \"open your wifi router app, and add to your port forwarding\"; echo \"\ninternal ip\"; ifconfig | grep inet | grep -v inet6; echo \"\npublic ip: $(curl -s ifconfig.me) (using ifconfig.me)\"; echo \"public ip: $(curl -s icanhazip.com) (using icanhazip.com)\";",
    "help": "echo \"npm run ...\n  certs (self-signed)\n  start-certbot-dev (letsencrypt staging)\n  start-certbot (letsencrypt prod - be careful!)\n  expose-wifi\n  systemd-install | systemd-uninstall | systemd-reinstall\n  systemd-status | systemd-logs\n  systemd-start | systemd-stop | systemd-restart\n  start | logs | stop | restart | delete\"",
    "audit2": "nsp audit-shrinkwrap; nsp audit-package",
    "certs": "mkdir -p certs && openssl genpkey -algorithm RSA -out certs/privkey.pem; openssl req -new -key certs/privkey.pem -out certs/csr.csr; openssl x509 -req -in certs/csr.csr -signkey certs/privkey.pem -out certs/cert.pem"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "acme-client": "^5.4.0",
    "cookie-parser": "^1.4.7",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.0",
    "ip-range-check": "^0.2.0",
    "jsdom": "^26.0.0",
    "mime-types": "^2.1.35",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.2",
    "node-cron": "^3.0.3",
    "node-forge": "^1.3.1",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "aws-sdk": "^2.1692.0",
    "pm2": "^6.0.5"
  }
}
